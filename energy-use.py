import pandas as pd
import matplotlib.pyplot as plt

# Load the data
file_path = 'energy1.dat'  # Adjust the file path as necessary
energy_data = pd.read_csv(file_path, delimiter='\t', parse_dates=['start_time', 'end_time'])

# Convert the timezone to UTC and then remove the timezone information
energy_data['start_time'] = pd.to_datetime(energy_data['start_time'], utc=True).dt.tz_convert(None)
energy_data['end_time'] = pd.to_datetime(energy_data['end_time'], utc=True).dt.tz_convert(None)

# Calculate the total energy consumed and the total cost
total_energy_consumed = energy_data['consumption'].sum()
total_cost = energy_data['provided_cost'].sum()

# Energy generated by solar panels in kWh (converted from MWh)
solar_generation_kWh = 4.95 * 1000  # 4.95 MWh to kWh

# Adjust total energy consumed by subtracting the energy generated by the solar panel
adjusted_energy_consumed = total_energy_consumed - solar_generation_kWh

# Calculate cost per kWh and adjust the total cost based on the new energy consumption
cost_per_kWh = total_cost / total_energy_consumed
adjusted_total_cost = adjusted_energy_consumed * cost_per_kWh

# Output the results
print(f"Original Total Energy Consumed: {total_energy_consumed} kWh")
print(f"Original Total Cost: ${total_cost:.2f}")
print(f"Adjusted Total Energy Consumed after Solar Contribution: {adjusted_energy_consumed} kWh")
print(f"Adjusted Total Cost after Solar Contribution: ${adjusted_total_cost:.2f}")

# Set the index for resampling purposes
energy_data.set_index('start_time', inplace=True)

# Resample the data to daily, weekly, monthly sums
daily_energy_consumption = energy_data['consumption'].resample('D').sum()
weekly_energy_consumption = energy_data['consumption'].resample('W').sum()
monthly_energy_consumption = energy_data['consumption'].resample('ME').sum()


# Plot the daily energy consumption
plt.figure(figsize=(12, 6))  # Adjust the figure size as needed
plt.plot(daily_energy_consumption.index, daily_energy_consumption, marker='o', linestyle='-', color='purple')
plt.title('Daily Energy Consumption')
plt.xlabel('Date')
plt.ylabel('Energy Consumption (kWh)')
plt.grid(True)
plt.savefig('Daily_Energy_Consumption.png')  # Save the plot as a PNG file
plt.show()

# Plot the weekly energy consumption
plt.figure(figsize=(10, 5))
plt.plot(weekly_energy_consumption.index, weekly_energy_consumption, marker='o', linestyle='-', color='blue')
plt.title('Weekly Energy Consumption')
plt.xlabel('Week')
plt.ylabel('Energy Consumption (kWh)')
plt.grid(True)
plt.savefig('Weekly_Energy_Consumption.png')
plt.show()

# Plot the monthly energy consumption
plt.figure(figsize=(10, 5))
plt.plot(monthly_energy_consumption.index, monthly_energy_consumption, marker='o', linestyle='-', color='green')
plt.title('Monthly Energy Consumption')
plt.xlabel('Month')
plt.ylabel('Energy Consumption (kWh)')
plt.grid(True)
plt.savefig('Monthly_Energy_Consumption.png')
plt.show()


